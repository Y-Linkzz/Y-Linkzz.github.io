import{_ as s,c as a,o as n,a as e}from"./app.64e01693.js";const d=JSON.parse('{"title":"倒计时 （秒杀）","description":"","frontmatter":{},"headers":[{"level":2,"title":"减少使用setInterval、setTimeout","slug":"减少使用setinterval、settimeout","link":"#减少使用setinterval、settimeout","children":[]},{"level":2,"title":"requestAnimationFrame","slug":"requestanimationframe","link":"#requestanimationframe","children":[]},{"level":2,"title":"当前标签页或移动端被置于后台时，计时器均会被挂起或者变慢，导致重新回来后的计时器出错","slug":"当前标签页或移动端被置于后台时-计时器均会被挂起或者变慢-导致重新回来后的计时器出错","link":"#当前标签页或移动端被置于后台时-计时器均会被挂起或者变慢-导致重新回来后的计时器出错","children":[{"level":3,"title":"解决方案：document.visibilityState","slug":"解决方案-document-visibilitystate","link":"#解决方案-document-visibilitystate","children":[]}]},{"level":2,"title":"setTimeout() / setInterval() 的每调用一次定时器的最小间隔是 4ms","slug":"settimeout-setinterval-的每调用一次定时器的最小间隔是-4ms","link":"#settimeout-setinterval-的每调用一次定时器的最小间隔是-4ms","children":[]}],"relativePath":"articles/function/count-down.md"}'),l={name:"articles/function/count-down.md"},o=e(`<h1 id="倒计时-秒杀" tabindex="-1">倒计时 （秒杀） <a class="header-anchor" href="#倒计时-秒杀" aria-hidden="true">#</a></h1><h2 id="减少使用setinterval、settimeout" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/setTimeout" target="_blank" rel="noreferrer">减少使用setInterval、setTimeout</a> <a class="header-anchor" href="#减少使用setinterval、settimeout" aria-hidden="true">#</a></h2><ul><li>js 是单线程执行，由于宏任务与微任务，会推迟定时器的执行，倒计时的时间越长，误差就会越大</li><li>虽然可以通过上次执行的时间来校准，但是使用的是本地时间，用户可更改</li></ul><h2 id="requestanimationframe" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/window/requestAnimationFrame" target="_blank" rel="noreferrer">requestAnimationFrame</a> <a class="header-anchor" href="#requestanimationframe" aria-hidden="true">#</a></h2><p>requestAnimationFrame也属于执行是异步执行的方法，但该方法既不属于宏任务，也不属于微任务 屏幕刷新率是 60Hz,那么回调函数就每 16.7ms 被执行一次。刷新率是 75Hz，那么这个时间间隔就变成了 1000/75=13.3ms。 它能保证回调函数在屏幕每一次的刷新间隔中只被执行一次，这样就不会引起丢帧现象，也不会导致动画出现卡顿的问题。</p><p><strong>为了提高性能和电池寿命，因此在大多数浏览器里，当requestAnimationFrame() 运行在后台标签页或者隐藏的<code>&lt;iframe&gt;</code> 里时，requestAnimationFrame() 会被暂停调用以提升性能和电池寿命。</strong></p><h2 id="当前标签页或移动端被置于后台时-计时器均会被挂起或者变慢-导致重新回来后的计时器出错" tabindex="-1"><a href="https://developer.chrome.com/blog/background_tabs/" target="_blank" rel="noreferrer">当前标签页或移动端被置于后台时，计时器均会被挂起或者变慢，导致重新回来后的计时器出错</a> <a class="header-anchor" href="#当前标签页或移动端被置于后台时-计时器均会被挂起或者变慢-导致重新回来后的计时器出错" aria-hidden="true">#</a></h2><ul><li><strong>减慢其计时器以节省性能</strong> ：未被激活的 tab 中定时器的最小延时限制为 1S(1000ms) ，比如：setInterval / setTimeout 大约 5-50 毫秒的精度运行时，切换 TAB 或最小化浏览器窗口，这些计时器会减慢很多，会变为每 1000 毫秒左右运行一次。requestAnimationFrame 不会再调用。<strong>特殊例子：播放音频的页面被认为是用户可见的，并且不受后台计时器限制</strong></li></ul><h3 id="解决方案-document-visibilitystate" tabindex="-1">解决方案：document.visibilityState <a class="header-anchor" href="#解决方案-document-visibilitystate" aria-hidden="true">#</a></h3><p>监听document.visibilityState，重新获取最新的时间来倒计时</p><h2 id="settimeout-setinterval-的每调用一次定时器的最小间隔是-4ms" tabindex="-1">setTimeout() / setInterval() 的每调用一次定时器的最小间隔是 4ms <a class="header-anchor" href="#settimeout-setinterval-的每调用一次定时器的最小间隔是-4ms" aria-hidden="true">#</a></h2><p>最大延时值 : 包括 IE、Chrome、Safari、Firefox 在内的浏览器其内部以 32 位带符号整数存储延时。这就会导致如果一个延时 (delay) 大于 2147483647 毫秒 (大约 24.8 天) 时就会溢出，导致定时器将会被立即执行。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">startCountdown</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">serverTimestamp</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">eventTimestamp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fetchTimestamps</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">timestampDiff</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">now</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">serverTimestamp</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">setInterval</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">remainingTime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">eventTimestamp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">timestampDiff</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">floor</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">now</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">remainingTime</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">countdown</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">innerText</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">秒杀活动已经开始！</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">updateCountdown</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">remainingTime</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,13),t=[o];function p(r,c,i,F,y,D){return n(),a("div",null,t)}const A=s(l,[["render",p]]);export{d as __pageData,A as default};
