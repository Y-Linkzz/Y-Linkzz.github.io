import{_ as s,c as n,o as a,a as o}from"./app.64e01693.js";const e="/assets/transition-classes.f0f7b3c9.png",A=JSON.parse('{"title":"内置组件","description":"","frontmatter":{},"headers":[{"level":2,"title":"Transition","slug":"transition","link":"#transition","children":[{"level":3,"title":"CSS 的 animation","slug":"css-的-animation","link":"#css-的-animation","children":[]}]}],"relativePath":"articles/vue/components.md"}'),l={name:"articles/vue/components.md"},t=o('<h1 id="内置组件" tabindex="-1">内置组件 <a class="header-anchor" href="#内置组件" aria-hidden="true">#</a></h1><h2 id="transition" tabindex="-1">Transition <a class="header-anchor" href="#transition" aria-hidden="true">#</a></h2><p><strong>触发条件</strong>：</p><ul><li>由 <code>v-if</code>所触发的切换</li><li>由 <code>v-show</code> 所触发的切换</li><li>由特殊元素 <code>&lt;component&gt;</code> 切换的动态组件</li><li>改变特殊的 <code>key</code> 属性</li></ul><p><strong>过度流程</strong>： <img src="'+e+`" alt=""></p><ol><li>元素插入之前添加 ： <code>v-enter-from</code> <code>v-enter-active</code></li><li>元素插入完成后的<strong>下一帧</strong>被添加 (也就是 <code>v-enter-from</code> 被移除的同时) ：<code>v-enter-to</code></li><li>离开过渡效果被触发时立即添加： <code>v-leave-from</code> <code>v-leave-active</code></li><li>离开动画被触发后的<strong>下一帧</strong>被添加 (也就是 <code>v-leave-from</code> 被移除的同时) <code>v-leave-to</code></li></ol><p><code>v-enter-active</code> 和 <code>v-leave-active</code> 给我们<strong>提供</strong>了为进入和离开<strong>动画指定不同速度曲线的能力</strong></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-enter-active</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-leave-active</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">transition</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> opacity </span><span style="color:#F78C6C;">0.5s</span><span style="color:#A6ACCD;"> ease</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-enter-from</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">fade-leave-to</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">opacity</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="css-的-animation" tabindex="-1">CSS 的 animation <a class="header-anchor" href="#css-的-animation" aria-hidden="true">#</a></h3><p><code>*-enter-from</code> 不是在元素插入后立即移除，而是在一个 <code>animationend</code> 事件触发时被移除</p><p>默认情况下，<code>&lt;Transition&gt;</code> 组件会通过监听过渡<strong>根元素</strong>上的第一个 <code>transitionend</code> 或者 <code>animationend</code> 事件来尝试自动<strong>判断过渡何时结束</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">&lt;!-- 嵌套的过渡有delay,需要传duration --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:duration</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">550</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,12),p=[t];function c(r,i,d,D,y,F){return a(),n("div",null,p)}const v=s(l,[["render",c]]);export{A as __pageData,v as default};
