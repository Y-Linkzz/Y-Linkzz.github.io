import{_ as e,c as r,o as t,a as i}from"./app.64e01693.js";const u=JSON.parse('{"title":"prettierrc配置","description":"","frontmatter":{},"headers":[{"level":2,"title":".prettierrc","slug":"prettierrc","link":"#prettierrc","children":[]},{"level":2,"title":".prettierignore","slug":"prettierignore","link":"#prettierignore","children":[]}],"relativePath":"articles/project/prettierrc.md"}'),a={name:"articles/project/prettierrc.md"},c=i('<h1 id="prettierrc配置" tabindex="-1">prettierrc配置 <a class="header-anchor" href="#prettierrc配置" aria-hidden="true">#</a></h1><p>代码格式化工具，主要目标是确保代码的一致性，无论多少人参与项目，它都能自动格式化代码以确保代码的一致性。</p><h2 id="prettierrc" tabindex="-1">.prettierrc <a class="header-anchor" href="#prettierrc" aria-hidden="true">#</a></h2><p><code>&quot;eslint-config-alloy/.prettierrc.js&quot;</code></p><h2 id="prettierignore" tabindex="-1">.prettierignore <a class="header-anchor" href="#prettierignore" aria-hidden="true">#</a></h2><p><em>.ico<br><em>ignore<br> /dist/</em><br> /public/</em><br> pnpm-lock.yaml</p>',6),o=[c];function p(n,s,d,l,_,h){return t(),r("div",null,o)}const f=e(a,[["render",p]]);export{u as __pageData,f as default};
